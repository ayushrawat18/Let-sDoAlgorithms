package Recursion;

import java.util.ArrayList;
import java.util.Stack;

public class PrintAllBinaryStrings {

    public static void main(String[] args) {

        System.out.println("Print all binary strings ");
        printStrings(3, new String());
        System.out.println("Print all possible strings that can be generated by a given string ");
        printAllCombination("ayu", new String());
        System.out.println("Print all subsets ");
        //input
        ArrayList<Integer> set = new ArrayList<>();
        set.add(1);
        set.add(2);
        set.add(3);
        //result
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        //intermidiate strings : slate
        ArrayList<Integer> slate = new ArrayList<>();
        //printSubSets(set, 0, slate ,result);
        System.out.println(result);

    }

    private static void printSubSets(ArrayList<Integer> set, int idx, ArrayList<Integer> slate, ArrayList<ArrayList<Integer>> result) {
        if (idx == set.size()) {
            System.out.println("hd");
            result.add(new ArrayList<Integer>(slate));
            return;
        } else {
            printSubSets(set, idx+1, slate, result);
            slate.add(set.get(idx));
            printSubSets(set, idx+1, slate, result);
            slate.remove(slate.size()-1);
        }
    }

    private static void printAllCombination(String str, String slate) {
        if (slate.length() == 2) {
            System.out.println(slate);
            return;
        } else  {
            for (int i = 0; i < str.length(); i++) {
                printAllCombination(str, slate + str.charAt(i));
            }
        }
    }

    /**
     *
     * @param num
     * @param slate
     */
    private static void printStrings(int num, String slate) {
        if (num == 0) {
            System.out.print(" "+slate);
        } else {
            for (int i = 4; i < 7; i++) {
                printStrings(num-1, slate+i);
                //printStrings(num-1, slate+1);
            }

        }
    }





}
